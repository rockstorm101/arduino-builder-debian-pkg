#!/usr/bin/make -f

# Output every command that modifies files on the build system.
export DH_VERBOSE = 1
#
# Copy some variable definitions from pkg-info.mk and vendor.mk
# under /usr/share/dpkg/ to here if they are useful.
#
# See FEATURE AREAS/ENVIRONMENT in dpkg-buildflags(1)
# Apply all hardening options
#export DEB_BUILD_MAINT_OPTIONS = hardening=+all
# Package maintainers to append CFLAGS
#export DEB_CFLAGS_MAINT_APPEND  = -Wall -pedantic
# Package maintainers to append LDFLAGS
#export DEB_LDFLAGS_MAINT_APPEND = -Wl,--as-needed
#
# With debhelper version 9 or newer, the dh command exports
# all buildflags.  So there is no need to include the
# /usr/share/dpkg/buildflags.mk file here if compat is 9 or newer.
#
# These are rarely used code. (START)
#
# The following include for *.mk magically sets miscellaneous
# variables while honoring existing values of pertinent
# environment variables:
#
# Architecture-related variables such as DEB_TARGET_MULTIARCH:
#include /usr/share/dpkg/architecture.mk
# Vendor-related variables such as DEB_VENDOR:
#include /usr/share/dpkg/vendor.mk
# Package-related variables such as DEB_DISTRIBUTION
#include /usr/share/dpkg/pkg-info.mk
#
# You may alternatively set them susing a simple script such as:
# DEB_VENDOR ?= $(shell dpkg-vendor --query  Vendor)
#
# These are rarely used code. (END)
#

EXCLUDED_TESTS := add_build_board_property_if_missing_test.go \
                  builder_test.go \
                  hardware_loader_test.go \
                  includes_to_include_folders_test.go \
                  prototypes_adder_test.go \
                  load_vid_pid_specific_properties_test.go \
                  setup_build_properties_test.go \
                  try_build_of_problematic_sketch_test.go \
                  tools_loader_test.go \
                  ctags_runner_test.go \
                  merge_sketch_with_bootloader_test.go \
                  libraries_loader_test.go \
                  target_board_resolver_test.go

# main packaging script based on dh7 syntax
%:
	dh $@ --buildsystem=golang --with=golang

override_dh_auto_configure:
	dh_auto_configure
	rm -rf obj-*/src/arduino.cc
	cp -r -t obj-*/src/ src/*

override_dh_auto_test:
ifeq (,$(findstring nocheck,$(DEB_BUILD_OPTIONS)))
	# Remove tests which download stuff:
	@for extest in $(EXCLUDED_TESTS) ; do \
		rm -v obj-*/src/arduino.cc/builder/test/$$extest; \
	done
	# Execute the rest of the tests
	cd obj-* &&\
	export GOPATH=$$(pwd) &&\
	go test -v -timeout 30m arduino.cc/...
endif

override_dh_auto_install:
	dh_auto_install -- --no-source

# debmake generated override targets
# Multiarch package requires library files to be installed to
# /usr/lib/<triplet>/ .  If the build system does not support
# $(DEB_HOST_MULTIARCH), you may need to override some targets such as
# dh_auto_configure or dh_auto_install to use $(DEB_HOST_MULTIARCH) .
